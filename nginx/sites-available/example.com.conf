# HTTP Configuration
server {
    listen          80;
    listen          [::]:80;
    server_name     ${DOMAIN};
    server_tokens   off;

    # certbot verification
    location /.well-known/acme-challenge/ {
        root        /var/www/certbot;
    }

    # redirect to HTTPS
    location / {
        return 301 https://${DOLLAR}host${DOLLAR}request_uri;
    }
}

# HTTPS Configuration
server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         ${DOMAIN};
    server_tokens off;

    # SSL
    ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # additional config
    include             nginxconfig.io/general.conf;
    include             nginxconfig.io/security.conf;

    # logging
    error_log           /var/log/nginx/${DOMAIN}.error.log warn;

    # restrict methods
    if (${DOLLAR}request_method !~ ^(GET|POST|PUT|PATCH|DELETE)${DOLLAR}) {
        return '405';
    }

    # API reverse proxy
    location /api {

        ### uncomment next 5 lines to require client certificate authentication (Nginx needs root CA cert)
        # ssl_client_certificate  /opt/CA/ca.crt;
        # ssl_verify_client       optional;
        # if (${DOLLAR}ssl_client_verify != SUCCESS) {
        #     return 403;
        # }

        proxy_pass http://flask:5000;
        include    nginxconfig.io/proxy.conf;
    }
}

### uncomment for subdomains redirect (requires wildcard cert)
# server {
#     listen              443 ssl http2;
#     listen              [::]:443 ssl http2;
#     server_name         *.${DOMAIN};
#     server_tokens off;

#     # SSL
#     ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
#     return              301 https://${DOMAIN}${DOLLAR}request_uri;
# }

